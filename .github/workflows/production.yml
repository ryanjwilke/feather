name: Production

on:
  push:
    branches:
      - master

jobs:
  node-cache:
    name: Node Modules Cache
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' || github.event.action == 'synchronize'
    steps:
      - name: Git Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Setup Node
        uses: actions/setup-node@v1.1.2
        with:
          node-version: 11.x
      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-${{ hashFiles('**/yarn.lock') }}
      - name: Install Yarn
        run: npm install yarn -g
      - name: Install Node Modules with Yarn
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

  lint:
    name: ESLint
    runs-on: ubuntu-latest
    needs: node-cache
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1.1.2
        with:
          node-version: 11.x
      - uses: actions/cache@v1.0.1
        id: cache
        with:
          path: node_modules
          key: node-${{ hashFiles('**/yarn.lock') }}
      - run: npm install yarn -g
      - run: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
      - run: yarn test:lint

  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    needs: node-cache
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1.1.2
        with:
          node-version: 11.x
      - uses: actions/cache@v1.0.1
        id: cache
        with:
          path: node_modules
          key: node-${{ hashFiles('**/yarn.lock') }}
      - run: npm install yarn -g
      - run: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
      - run: yarn prettier:check

  html-validate:
    name: HTML-Validate
    runs-on: ubuntu-latest
    needs: node-cache
    steps:
      - name: Git Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Setup Node
        uses: actions/setup-node@v1.1.2
        with:
          node-version: 11.x
      - uses: actions/cache@v1.0.1
        id: cache
        with:
          path: node_modules
          key: node-${{ hashFiles('**/yarn.lock') }}
      - run: npm install yarn -g
      - run: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
      - run: yarn build
      - run: yarn test:vue
      - run: yarn test:html

  jest:
    name: Jest
    runs-on: ubuntu-latest
    needs: node-cache
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1.1.2
        with:
          node-version: 11.x
      - uses: actions/cache@v1.0.1
        id: cache
        with:
          path: node_modules
          key: node-${{ hashFiles('**/yarn.lock') }}
      - run: npm install yarn -g
      - run: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
      - run: yarn test:unit:ci
      - run: yarn test:unit:coverage
  # puppeteer:
  #   name: Puppeteer
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v1
  #       with:
  #         fetch-depth: 1
  #     - name: Setup Node
  #       uses: actions/setup-node@v1.1.2
  #       with:
  #         node-version: 11.x
  #     - name: Install Yarn with NPM
  #       run: npm install yarn -g
  #     - name: Yarn Install
  #       run: yarn install
  #     - run: yarn test:e2e:ci
  #
  # percy:
  #   name: Percy
  #   runs-on: macOS-latest
  #   needs: [jest, lint, prettier, html-validate, puppeteer]
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v1
  #       with:
  #         fetch-depth: 1
  #     - name: Setup Node
  #       uses: actions/setup-node@v1.1.2
  #       with:
  #         node-version: 11.x
  #     - name: Install Yarn with NPM
  #       run: npm install yarn -g
  #     - name: Yarn Install
  #       run: yarn install
  #     - name: Percy
  #       run: yarn test:e2e:percy
  #       env:
  #         PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
  #         PERCY_BRANCH: master

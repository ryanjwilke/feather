name: Test

on:
  pull_request:
    types: [opened, synchronize, labeled, ready_for_review]

jobs:
  ci:
    name: CI Tests
    runs-on: ubuntu-latest
    env:
      NPM_USERNAME: ${{ secrets.NPM_USERNAME }}
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      NPM_EMAIL: ${{ secrets.NPM_EMAIL }}
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v1.2.0
        with:
          node-version: 11.x
      - uses: actions/cache@v1.0.1
        id: modules
        with:
          path: node_modules
          key: module-${{ hashFiles('yarn.lock') }}
      - run: npm install yarn -g
      - run: yarn install
        if: steps.modules.outputs.cache-hit != 'true'
      - run: yarn build
      - run: yarn audit --level low
      - uses: actions/cache@v1.0.1
        id: docs-modules
        with:
          path: docs/node_modules
          key: docs-module-${{ hashFiles('docs/yarn.lock') }}
      - run: yarn install
        working-directory: docs
        if: steps.docs-modules.outputs.cache-hit != 'true'
      - run: yarn build
        working-directory: docs
      - run: yarn prettier:check
        working-directory: docs
      - run: yarn test:lint
        working-directory: docs
      - run: yarn test:vue
        working-directory: docs
      - run: yarn test:html
        working-directory: docs
      - run: yarn test:unit:ci
        working-directory: docs
      - run: yarn test:unit:coverage
        working-directory: docs
      - run: yarn test:e2e:ci
        working-directory: docs
      - run: yarn test:e2e:percy
        working-directory: docs
        if: contains(github.event.pull_request.labels.*.name, 'Ready for Review')
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          PERCY_BRANCH: ${{ github.head_ref }}

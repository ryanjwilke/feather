name: Test

on:
  pull_request:
    types: [opened, synchronize, labeled, ready_for_review]

jobs:
  ci:
    name: CI Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v1.1.2
        with:
          node-version: 11.x
      - uses: actions/cache@v1.0.1
        id: cache
        with:
          path: node_modules
          key: node-${{ hashFiles('**/yarn.lock') }}
      - run: npm install yarn -g
      - run: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
      - run: yarn prettier:check
      - run: yarn test:lint
      - run: yarn test:vue
      - run: yarn test:html
      - run: yarn test:unit:ci
      - run: yarn test:unit:coverage
  #
  # puppeteer:
  #   name: Puppeteer
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v1
  #       with:
  #         fetch-depth: 1
  #     - name: Setup Node
  #       uses: actions/setup-node@v1.1.2
  #       with:
  #         node-version: 11.x
  #     - name: Install Yarn with NPM
  #       run: npm install yarn -g
  #     - name: Yarn Install
  #       run: yarn install
  #     - name: Jest Screenshot
  #       run: yarn test:e2e:ci
  #
  # percy:
  #   name: Percy
  #   runs-on: macOS-latest
  #   needs: [jest, lint, prettier, html-validate, puppeteer]
  #   if: contains(github.event.pull_request.labels.*.name, 'Ready for Review')
  #   steps:
  #     - name: Git Checkout
  #       uses: actions/checkout@v1
  #       with:
  #         fetch-depth: 1
  #     - name: Setup Node
  #       uses: actions/setup-node@v1.1.2
  #       with:
  #         node-version: 11.x
  #     - name: Install Yarn with NPM
  #       run: npm install yarn -g
  #     - name: Yarn Install
  #       run: yarn install
  #     - name: Percy
  #       run: yarn test:e2e:percy
  #       env:
  #         PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
  #         PERCY_BRANCH: ${{ github.head_ref }}

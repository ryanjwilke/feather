@mixin each-utility($breakpoint: null)
  $utility-breakpoint: $breakpoint !global

  @each $utility-property-name, $utility-options in $feather-utilities
    $utility-property-name: $utility-property-name !global
    $utility-options: $utility-options !global
    $utility-states: map-get($utility-options, states) !global
    $utility-prefix: map-get($utility-options, prefix) !global
    $utility-values: map-get($utility-options, values) !global
    $utility-variants: map-get($utility-options, variants) !global
    $utility-properties: map-get($utility-options, properties) !global
    $utility-is-responsive: map-get($utility-options, responsive) !global

    @if $utility-breakpoint == null or ($utility-breakpoint != null and $utility-is-responsive)
      @each $class, $value in $utility-values
        $value: if($value, $value, $class)

        // 1. Print the base styles
        .#{utility-class($class)}
          #{$utility-property-name}: $value

        // 2. Print the utility states
        @if $utility-states and $utility-is-responsive == false and $utility-breakpoint == null
          @each $state in $utility-states
            @if $state == group-hover
              .group:hover .#{$state + '\\:' + utility-class($class)}
                @extend .#{utility-class($class)}
            @else
              .#{$state + '\\:' + utility-class($class) + ':' + $state}
                @extend .#{utility-class($class)}

        // 3. Print the utility variants
        @if $utility-variants
          @each $v-class, $v-props in $utility-variants
            @if $utility-property-name == border-style
              .#{utility-class(($v-class + '-' + $class))}
                @each $variant in $v-props
                  border-#{$variant}-style: $value
            @else
              .#{utility-class($v-class)}-#{sanitize-class($value)}
                @each $variant in $v-props
                  #{$utility-property-name}-#{$variant}: $value

      // 4. Print the other utility properties
      @if $utility-properties
        @each $class, $properties in $utility-properties
          .#{$utility-prefix}-#{$class}
            @each $property, $value in $properties
              #{$property}: #{$value}
